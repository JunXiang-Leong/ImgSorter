# -*- coding: utf-8 -*-
"""img_reconition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ByeDa-RAVO_UGvlz6xN9-VPnrTlm30Tt
"""

import tensorflow as tf
import os

gpus = tf.config.experimental.list_physical_devices('GPU')

for gpu in gpus:
  tf.config.experimental.set_memory_growth(gpu,True)

"""**Filter out images**"""


import numpy as np
import cv2
import imghdr
import sys


# total arguments
n = len(sys.argv)
if n != 3:
    print(f'you might have to check the inputs req 3 inputs')
    pass

file_dir = sys.argv[1] #model directory
data_dir = sys.argv[2] #data to filter

from tensorflow.keras.models import load_model

new_model = load_model(file_dir)
print('loaded ', file_dir) 

#create a folder inside targeted folder
rejection_folder = os.path.join(data_dir, 'reject')
os.mkdir(rejection_folder)

#permited extensions
image_exts = ['jpeg', 'jpg', 'bmp', 'png']

for image in os.listdir(data_dir):
  image_path = os.path.join(data_dir,image)
  img = cv2.imread(image_path)
  try:
    tip = imghdr.what(image_path)
    if tip not in image_exts:
      os.rename(image_path, os.path.join(rejection_folder, image))
      continue
  except Exception as e:
    print('issue with image {}'.format(image_path))
    continue
  resize = tf.image.resize(img, (256,256))
  yhat = new_model.predict(np.expand_dims(resize/255, 0))
  if yhat > 0.5: 
    os.rename(image_path, os.path.join(rejection_folder, image))
    continue


print('files have been sorted')